<?php

namespace Healsdata\Wordzee\Test\Word;

use Healsdata\Wordzee\WordFinder;
use PHPUnit\Framework\TestCase;

class WordFinderTest extends TestCase
{
    private WordFinder $wordFinder;

    public function setUp(): void
    {
        $this->wordFinder = new WordFinder(__DIR__ . DIRECTORY_SEPARATOR . "test-dictionary.txt");

        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function dataProviderTestDictionary()
    {
        return [
            ["zzzz", []],
            ["soda", ["SODA"]],
            ["sodah", ["ASH", "SODA"]],
            ["sodahe", ["ASH", "SODA"]],
            ["sodahes", ["ASH", "ASHES", "SODA"]],
            ["has", ["ASH"]],
            ["hhas", ["ASH", "HASH"]],
        ];
    }

    /**
     * @dataProvider dataProviderTestDictionary
     * @param string $letters
     * @param array $expected
     */
    public function testFindSpellableWith(string $letters, array $expected)
    {
        $actual = $this->wordFinder->findSpellableWith($letters);

        sort($actual);
        sort($expected);

        $this->assertSame($expected, $actual);
    }
}